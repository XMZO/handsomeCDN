// 检查是否是特殊视频
if (videoConfig.specialVideos.includes(video)) {
    // 静音切换函数
    const toggleMute = () => {
        DynamicWallpaper.muted = !DynamicWallpaper.muted;
        muteButton.textContent = DynamicWallpaper.muted ? "🔇" : "🔊";

        // 首次取消静音时显示提示
        if (!DynamicWallpaper.muted && isFirstUnmute) {
            const notification = document.createElement("div");
            notification.textContent = "😮发现特殊动态背景，已开启声音！";
            notification.style.cssText = `
                position: fixed;
                bottom: 80px;
                right: 20px;
                background: linear-gradient(135deg, 
                    rgba(255,0,0,0.2), 
                    rgba(0,255,0,0.2), 
                    rgba(0,0,255,0.2)
                );
                backdrop-filter: blur(10px);
                color: #FF69B4;
                padding: 8px 16px;
                border-radius: 8px;
                z-index: 9999;
                font-size: 12px;
                box-shadow: 0 4px 15px rgba(0,0,0,0.2);
                border: 1px solid rgba(255,255,255,0.2);
            `;
            document.body.appendChild(notification);
            setTimeout(() => notification.remove(), 3000);
            isFirstUnmute = false;
        }
    };

    // 创建音量控制按钮
    const muteButton = document.createElement("button");
    muteButton.textContent = DynamicWallpaper.muted ? "🔇" : "🔊";
    muteButton.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 120px;
        background: rgba(255,255,255,0.3);
        backdrop-filter: blur(10px);
        color: black;
        border: none;
        padding: 8px 12px;
        border-radius: 50%;
        cursor: pointer;
        z-index: 9999;
        font-size: 14px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        transition: opacity 0.3s ease;
    `;
    document.body.appendChild(muteButton);

    // 鼠标悬停效果
    let hideTimeout;
    muteButton.addEventListener("mouseenter", () => {
        clearTimeout(hideTimeout);
        muteButton.style.opacity = "1";
    });
    muteButton.addEventListener("mouseleave", () => {
        hideTimeout = setTimeout(() => muteButton.style.opacity = "0", 3000);
    });

    // 按钮点击事件
    let isFirstUnmute = true;
    muteButton.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleMute();
    });

    // 文档点击事件
    let hasUnmuted = false;
    document.addEventListener("click", () => {
        if (DynamicWallpaper.muted && !hasUnmuted) {
            toggleMute();
            hasUnmuted = true;
        }
    });
}